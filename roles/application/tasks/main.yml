---
# - name: Install Forever
#   npm: name=forever global=true state=latest

- name: Disable nginx default site
  file: path=/etc/nginx/sites-enabled/default state=absent

- name: Copy vhost configurataion
  template: src=chesshub.conf dest=/etc/nginx/sites-available/chesshub.conf

- name: Enable Vhost configuration
  file: src=/etc/nginx/sites-available/chesshub.conf dest=/etc/nginx/sites-enabled/chesshub.conf state=link
  notify: Restart Nginx

# Application Deployment
- name: Create /var/www dir
  file: path=/var/www state=directory

- name: Fetch the application source
  git: repo={{ git_repo }} dest=/var/www/DemoProject accept_hostkey=yes force=yes

- name: Install custom application configuration
  template: src=default.json dest=/var/www/DemoProject/config/default.json

- name: Install Dependencies
  npm: path=/var/www/DemoProject state=present

- name: Create service to start application
  template: src=nodeapp.conf dest=/etc/init/nodeapp.conf

- name: Create symbolic link of service
  file: src=/etc/init/nodeapp.conf dest=/etc/init.d/nodeapp state=link
  #command: ln -s  /etc/init/nodeapp.conf  /etc/init.d/nodeapp

- name: ensure nodeapp is started
  service: name=nodeapp state=started 

- name: ensure nodeapp is stopped
  service: name=nodeapp state=stopped 

- name: ensure nodeapp is restarted
  service: name=nodeapp state=restarted 

#- name: Initialize the Data to elasticsearch and mongodb
 # command: chdir=/var/www/DemoProject node app.js

#- name: Upload running script
#  copy: src=run.sh dest=/tmp/run.sh mode=700 owner=root group=root

#- name: Make sure that the application is not running
 # command: forever list
  #register: list_result
 # changed_when: false
 
#- name: Run the application with Forever
 # shell: chdir=/var/www/DemoProject forever start app.js
 # when: list_result.stdout.find('/var/www/DemoProject/app.js') == -1
